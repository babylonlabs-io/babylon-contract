{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "`Config` returns the current configuration of the btc-staking contract",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Params` returns the current Consumer-specific parameters of the btc-staking contract",
      "type": "object",
      "required": [
        "params"
      ],
      "properties": {
        "params": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Admin` returns the current admin of the contract",
      "type": "object",
      "required": [
        "admin"
      ],
      "properties": {
        "admin": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`FinalityProvider` returns the finality provider by its BTC public key, in hex format",
      "type": "object",
      "required": [
        "finality_provider"
      ],
      "properties": {
        "finality_provider": {
          "type": "object",
          "required": [
            "btc_pk_hex"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`FinalityProviders` returns the list of registered finality providers\n\n`start_after` is the BTC public key of the FP to start after, or `None` to start from the beginning",
      "type": "object",
      "required": [
        "finality_providers"
      ],
      "properties": {
        "finality_providers": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Delegation` returns delegation information by its staking tx hash, in hex format",
      "type": "object",
      "required": [
        "delegation"
      ],
      "properties": {
        "delegation": {
          "type": "object",
          "required": [
            "staking_tx_hash_hex"
          ],
          "properties": {
            "staking_tx_hash_hex": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Delegations` return the list of delegations\n\n`start_after` is the staking tx hash (in hex format) of the delegation to start after, or `None` to start from the beginning. `limit` is the maximum number of delegations to return. `active` is an optional filter to return only active delegations",
      "type": "object",
      "required": [
        "delegations"
      ],
      "properties": {
        "delegations": {
          "type": "object",
          "properties": {
            "active": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`DelegationsByFP` returns the list of staking tx hashes (in hex format) corresponding to delegations, for a given finality provider.\n\n`btc_pk_hex` is the BTC public key of the finality provider, in hex format. The hashes are returned in hex format",
      "type": "object",
      "required": [
        "delegations_by_f_p"
      ],
      "properties": {
        "delegations_by_f_p": {
          "type": "object",
          "required": [
            "btc_pk_hex"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`FinalityProviderInfo` returns the finality provider information by its BTC public key, in hex format The information includes the aggregated power of the finality provider.\n\n`height` is the optional block height at which the power is being aggregated. If `height` is not provided, the latest aggregated power is returned",
      "type": "object",
      "required": [
        "finality_provider_info"
      ],
      "properties": {
        "finality_provider_info": {
          "type": "object",
          "required": [
            "btc_pk_hex"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            },
            "height": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`FinalityProvidersByPower` returns the list of finality provider infos sorted by their aggregated power, in descending order.\n\n`start_after` is the BTC public key of the FP to start after, or `None` to start from the top",
      "type": "object",
      "required": [
        "finality_providers_by_power"
      ],
      "properties": {
        "finality_providers_by_power": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/FinalityProviderInfo"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`FinalitySignature` returns the signature of the finality provider for a given block height",
      "type": "object",
      "required": [
        "finality_signature"
      ],
      "properties": {
        "finality_signature": {
          "type": "object",
          "required": [
            "btc_pk_hex",
            "height"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            },
            "height": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`PubRandCommit` returns the public random commitments for a given FP.\n\n`btc_pk_hex` is the BTC public key of the finality provider, in hex format.\n\n`start_after` is the height of to start after (before, if `reverse` is `true`), or `None` to start from the beginning (end, if `reverse` is `true`). `limit` is the maximum number of commitments to return. `reverse` is an optional flag to return the commitments in reverse order",
      "type": "object",
      "required": [
        "pub_rand_commit"
      ],
      "properties": {
        "pub_rand_commit": {
          "type": "object",
          "required": [
            "btc_pk_hex"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "reverse": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "start_after": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`FirstPubRandCommit` returns the first public random commitment (if any) for a given FP.\n\nIt's a convenience shortcut of `PubRandCommit` with a `limit` of 1, and `reverse` set to false.\n\n`btc_pk_hex` is the BTC public key of the finality provider, in hex format.",
      "type": "object",
      "required": [
        "first_pub_rand_commit"
      ],
      "properties": {
        "first_pub_rand_commit": {
          "type": "object",
          "required": [
            "btc_pk_hex"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`LastPubRandCommit` returns the last public random commitment (if any) for a given FP.\n\nIt's a convenience shortcut of `PubRandCommit` with a `limit` of 1, and `reverse` set to true.\n\n`btc_pk_hex` is the BTC public key of the finality provider, in hex format.",
      "type": "object",
      "required": [
        "last_pub_rand_commit"
      ],
      "properties": {
        "last_pub_rand_commit": {
          "type": "object",
          "required": [
            "btc_pk_hex"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`ActivatedHeight` returns the height at which the contract gets its first delegation, if any",
      "type": "object",
      "required": [
        "activated_height"
      ],
      "properties": {
        "activated_height": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Block` returns the indexed block information at height",
      "type": "object",
      "required": [
        "block"
      ],
      "properties": {
        "block": {
          "type": "object",
          "required": [
            "height"
          ],
          "properties": {
            "height": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Blocks` return the list of indexed blocks.\n\n`start_after` is the height of the block to start after (before, if `reverse` is `true`), or `None` to start from the beginning (end, if `reverse` is `true`). `limit` is the maximum number of blocks to return. `finalised` is an optional filter to return only finalised blocks. `reverse` is an optional flag to return the blocks in reverse order",
      "type": "object",
      "required": [
        "blocks"
      ],
      "properties": {
        "blocks": {
          "type": "object",
          "properties": {
            "finalised": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "reverse": {
              "type": [
                "boolean",
                "null"
              ]
            },
            "start_after": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "`Evidence` returns the evidence for a given FP and block height",
      "type": "object",
      "required": [
        "evidence"
      ],
      "properties": {
        "evidence": {
          "type": "object",
          "required": [
            "btc_pk_hex",
            "height"
          ],
          "properties": {
            "btc_pk_hex": {
              "type": "string"
            },
            "height": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "FinalityProviderInfo": {
      "type": "object",
      "required": [
        "btc_pk_hex",
        "power"
      ],
      "properties": {
        "btc_pk_hex": {
          "description": "`btc_pk_hex` is the Bitcoin secp256k1 PK of this finality provider. The PK follows encoding in BIP-340 spec in hex format",
          "type": "string"
        },
        "power": {
          "description": "`power` is the aggregated power of this finality provider. The power is calculated based on the amount of BTC delegated to this finality provider",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      },
      "additionalProperties": false
    }
  }
}
